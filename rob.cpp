require 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
  end

  def draw
    Gosu.draw_circle(@x, @y, 50, 30, @color)
  end
end

# draw the circle
circle = Circle.new(200, 200)
circle.drawrequire 'gosu'

class Circle
  attr_reader :x, :y
  attr_accessor :color

  def initialize(x, y)
    @x = x
    @y = y
    @color = Gosu::Color::WHITE
